      - name: "push main image"
        env:
          PR: ${{ github.event_name == 'pull_request' }}
          FORCE_REBUILD: ${{ inputs.force-rebuild }}
        shell: bash
        run: |
          set -euxo pipefail



          IMAGE_ID=$(cat ./mkosi.output/image_id)


          VERSION=$(cat ./mkosi.output/version)
          ARCH=$(cat ./mkosi.output/architecture)
          TAGNAME="${IMAGE_ID}_${VERSION}_${ARCH}"

          find ./mkosi.images/base -type f -exec sha256sum {} \; | sort > ./mkosi.output/inputs
          find ./mkosi.extra/ -type f -exec sha256sum {} \; | sort >> ./mkosi.output/inputs
          sha256sum mkosi.conf >> ./mkosi.output/inputs
          sha256sum mkosi.finalize >> ./mkosi.output/inputs
          new="$(cat ./mkosi.output/inputs)"

          echo "Fetching info from existing release: ${TAGNAME}"
          curl --location --fail --output inputs.old  "${RELEASEURL}/${TAGNAME}/inputs"  || touch inputs.old
          old="$(cat inputs.old)"

          # only proceed if the inputs changed

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes in inputs since last release. Skipping."
            exit 0
          fi

          cat ./mkosi.output/${IMAGE_ID}_*.SHA256SUMS > ./mkosi.output/SHA256SUMS
          # remove the "*" character from the SHA256SUMS file
          sed -i 's/\*//g' ./mkosi.output/SHA256SUMS

          echo "Detected changes. Proceeding to publish new release for: ${TAGNAME}"
          git config --global --add safe.directory "${PWD}"

          cd "mkosi.output"


          VERSION_ID="$(cat ./version_id)"

          if [[ ! -f "./${TAGNAME}.raw" ]]; then
            echo "No sysext built. Skipping."
            exit 0
          fi
          cp ./${IMAGE_ID}.SHA256SUMS ./SHA256SUMS
          echo "Creating new release for: ${TAGNAME}"

          {
          echo "Release:"
          echo "\`\`\`"
          cat ./SHA256SUMS
          echo "\`\`\`"
          echo ""
          echo "Built using input files:"
          echo "\`\`\`"
          cat ./${IMAGE_ID}.inputs
          echo "\`\`\`"
          } > notes

          gh release delete \
            --cleanup-tag \
            --yes \
            "${TAGNAME}" \
            || true

          gh release create \
            --title "${IMAGE_ID} ${VERSION} for Debian ${VERSION_ID} (${ARCH})" \
            --notes-file notes \
            "${TAGNAME}" \
            --latest=false \
            ./${TAGNAME}.raw ./SHA256SUMS ./inputs
