#!/bin/bash

# snowctl - Snow Linux extension management tool
# Usage: snowctl <verb> <parameter>
# Verbs: install, update, uninstall

set -euo pipefail

url="https://extensions.snowlinux.org/extensions"

# Function to display usage information
usage() {
    cat << EOF
Usage: $0 <verb> <parameter>

Verbs:
    install   <name>    Install an extension
    update    <name>    Update an extension
    uninstall <name>    Uninstall an extension
    list                List available extensions

Examples:
    $0 install sysext-dev
    $0 update sysext-dev
    $0 uninstall sysext-dev
    $0 list
EOF
}

# Function to install an extension
install_extension() {
    local name="$1"
    echo "Installing extension: $name"
    install -d -m 0755 -o 0 -g 0 /etc/sysupdate.${name}.d
    curl --silent --fail --location "${url}/${name}.transfer" \
    | tee "/etc/sysupdate.${name}.d/${name}.transfer"
    /usr/lib/systemd/systemd-sysupdate update --component "${name}"
}

# Function to update an extension
update_extension() {
    local name="$1"
    echo "Updating extension: $name"
    /usr/lib/systemd/systemd-sysupdate update --component "${name}"
}

# Function to uninstall an extension
uninstall_extension() {
    local name="$1"
    echo "Uninstalling extension: $name"
    rm -i "/var/lib/extensions/${name}.raw"
    rm -i "/var/lib/extensions.d/${name}-"*".raw"
    rm -i "/etc/sysupdate.${name}.d/${name}.transfer"
    rmdir "/etc/sysupdate.${name}.d/"
}

# List available extensions
list_extensions() {
    echo "Available extensions:"
    curl --silent --fail --location "${url}/SHA256SUMS" | grep -oE 'sysext[^_]*' | uniq | sort
}

# Main function
main() {
      #Check if running as root
      if [[ $EUID -ne 0 ]]; then
          echo "Error: This script must be run as root" >&2
          echo "Please re-run with: run0 $0 $*" >&2
          exit 1
      fi

      if [[ $# -lt 1 ]]; then
          echo "Error: Missing arguments" >&2
          usage
          exit 1
      fi

    local verb="$1"

    # Validate verb and call appropriate function
    case "$verb" in
        install)
            # Check if we have at least 2 arguments
            if [[ $# -lt 2 ]]; then
                echo "Error: Missing arguments" >&2
                usage
                exit 1
            fi
            local parameter="$2"
            install_extension "$parameter"
            ;;
        update)
            if [[ $# -lt 2 ]]; then
                echo "Error: Missing arguments" >&2
                usage
                exit 1
            fi
            local parameter="$2"
            update_extension "$parameter"
            ;;
        uninstall)
            if [[ $# -lt 2 ]]; then
                echo "Error: Missing arguments" >&2
                usage
                exit 1
            fi
            local parameter="$2"
            uninstall_extension "$parameter"
            ;;
        list)
            list_extensions
            ;;
        *)
            echo "Error: Unknown verb '$verb'" >&2
            usage
            exit 1
            ;;
    esac
}

# Call main function with all arguments
main "$@"
